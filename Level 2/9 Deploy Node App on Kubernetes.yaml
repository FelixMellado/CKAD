The Nautilus development team has completed development of one of the node applications, which they are planning to deploy on a Kubernetes cluster. They recently had a meeting with the DevOps team to share their requirements. Based on that, the DevOps team has listed out the exact requirements to deploy the app. Find below more details:

    Create a deployment using gcr.io/kodekloud/centos-ssh-enabled:node image, replica count must be 2.

    Create a service to expose this app, the service type must be NodePort, targetPort must be 8080 and nodePort should be 30012.

    Make sure all the pods are in Running state after the deployment.

    You can check the application by clicking on NodeApp button on top bar.

You can use any labels as per your choice.

Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.



apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: app-node
  name: app-node
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-node
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app-node
    spec:
      containers:
      - image: gcr.io/kodekloud/centos-ssh-enabled:node
        name: centos-ssh-enabled
        ports:
        - containerPort: 8080
        resources: {}
status: {}


apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-04-20T10:04:13Z"
  labels:
    app: app-node
  name: app-node
  namespace: default
  resourceVersion: "12833"
  uid: e8decdf0-f4f0-41ec-b4c8-fae9df9c2a1d
spec:
  clusterIP: 10.96.81.184
  clusterIPs:
  - 10.96.81.184
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 30012
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: app-node
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
~                            

