One of the DevOps engineers was trying to deploy a python app on Kubernetes cluster. Unfortunately, due to some mis-configuration, the application is not coming up. Please take a look into it and fix the issues. Application should be accessible on the specified nodePort.


    The deployment name is python-deployment-nautilus, its using poroko/flask-demo-appimage. The deployment and service of this app is already deployed.

    nodePort should be 32345 and targetPort should be python flask app's default port.

Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.

thor@jumphost ~$ k edit deployments.apps python-deployment-nautilus 

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"python-deployment-nautilus","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"python_app"}},"template":{"metadata":{"labels":{"app":"python_app"}},"spec":{"containers":[{"image":"poroko/flask-app-demo","name":"python-container-nautilus","ports":[{"containerPort":5000}]}]}}}}
  creationTimestamp: "2025-04-29T16:18:54Z"
  generation: 1
  name: python-deployment-nautilus
  namespace: default
  resourceVersion: "3857"
  uid: 8b3a5bd2-8413-4d42-804a-92d67f1b7944
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: python_app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: python_app
    spec:
      containers:
      - image: poroko/flask-app-demo  ---->> poroko/flask-demo-app
        imagePullPolicy: Always
        name: python-container-nautilus
        ports:
        - containerPort: 5000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2025-04-29T16:18:54Z"
    lastUpdateTime: "2025-04-29T16:18:54Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2025-04-29T16:18:54Z"
    lastUpdateTime: "2025-04-29T16:18:54Z"
    message: ReplicaSet "python-deployment-nautilus-94c6999b7" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1        

deployment.apps/python-deployment-nautilus edited
thor@jumphost ~$ k edit service python-service-nautilus 

apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"python-service-nautilus","namespace":"default"},"spec":{"ports":[{"nodePort":32345,"port":8080}],"selector":{"app":"python_app"},"type":"NodePort"}}
  creationTimestamp: "2025-04-29T16:18:54Z"
  name: python-service-nautilus
  namespace: default
  resourceVersion: "3848"
  uid: ae36e8a6-f403-4cdd-9199-b7cb851b8c29
spec:
  clusterIP: 10.96.118.185
  clusterIPs:
  - 10.96.118.185
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 32345
    port: 8080
    protocol: TCP
    targetPort: 8080  ---->> 5000
  selector:
    app: python_app
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

service/python-service-nautilus edited


thor@jumphost ~$ k get endpoints
NAME                      ENDPOINTS         AGE
kubernetes                172.17.0.2:6443   49m
python-service-nautilus   10.244.0.6:5000   5m47s